import sys
from scapy.all import *

def scan_packet(packet):
    print("Packet received with IP ID = {}".format(packet[IP].id))

def check_pattern(target_ip):
    zero_count = 0
    const_count = 0
    rand_count = 0
    inc_count = 0
    
    for i in range(10):
        packet = IP(dst=target_ip)/ICMP()
        response = sr1(packet, verbose=0)
        if response:
            print("Packet received with IP ID = {}".format(response[IP].id))
    
    # analyze the IP IDs generated by the sent packets
    for i in range(100):
        packet = IP(dst=target_ip)/ICMP()
        response = sr1(packet, verbose=0)
        if response:
            ip_id = response[IP].id
            if ip_id == 0:
                zero_count += 1
            elif ip_id == const_count:
                const_count += 1
            elif ip_id != rand_count:
                rand_count += 1
            elif ip_id == inc_count:
                inc_count += 1
    
    if zero_count == 100:
        print("All IP IDs are zero")
    elif const_count == 100:
        print("All IP IDs are constant")
    elif rand_count == 100:
        print("All IP IDs are randomized")
    elif inc_count == 100:
        print("All IP IDs are incremental")
    else:
        print("IP ID pattern can't be identified")

if __name__ == '__main__':
    if len(sys.argv) != 2:
        print("Usage: python ip_id_pattern.py [target IP address]")
        sys.exit(1)
    target_ip = sys.argv[1]
    check_pattern(target_ip)